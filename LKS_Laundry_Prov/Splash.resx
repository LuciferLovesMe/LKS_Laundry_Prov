<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Tqaw3nrr/3TWUUkR9xtpAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>